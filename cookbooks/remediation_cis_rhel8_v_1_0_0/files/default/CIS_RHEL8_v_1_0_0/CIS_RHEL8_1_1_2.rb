# frozen_string_literal: true

require_relative 'cis_remediation'

class CIS_RHEL8_1_1_2 < CISRemediation
  def initialize
    super('CIS_RHEL8_1_1_2')
    @title = 'Ensure /tmp is configured (Scored)'
    @scored = true
    @level = 1
    @identifier = '1.1.2'
    @description = '
    "1.1.2 Ensure /tmp is configured (Scored)\nProfile Applicability:\n Level 1 - Server\n Level 1 - Workstation\nDescription:\nThe /tmp directory is a world-writable directory used for temporary storage by all users and some applications.\nRationale:\nMaking /tmp its own file system allows an administrator to set the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a \nhardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a \nsecurity vulnerability, the attacker could continue to exploit the known flaw.\nThis can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.\nAudit:\nRun the following command and verify output shows /tmp is mounted:\nRun the following command and verify that tmpfs has been mounted to, or a system partition has been created for /tmp\nOR\n      # mount | grep -E \s/tmp\s\ntmpfs on /tmp type tmpfs (rw,nosuid,nodev,noexec,relatime)\n             # grep -E \s/tmp\s /etc/fstab | grep -E -v ^\s*# tmpfs /tmp tmpfs defaults,noexec,nosuid,nodev 0 0\n             # systemctl is-enabled tmp.mount\nenabled\n\nRemediation:\nConfigure /etc/fstab as appropriate.\nOR\nRun the following commands to enable systemd /tmp mounting:\nEdit /etc/systemd/system/local-fs.target.wants/tmp.mount to configure the /tmp mount:\nImpact:\nSince the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.\nRunning out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a default installation a disk-based /tmp will essentially have the whole disk available, as it only creates a single \n/ partition. On the other hand, a RAM-based /tmp as with tmpfs will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily.\n/tmp utilizing tmpfs can be resized using the size={size} parameter on the Options line on the tmp.mount file\nReferences:\n1. AJ Lewis, \"LVM HOWTO\", http://tldp.org/HOWTO/LVM-HOWTO/\n2. https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems/\n      example:\ntmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n           # systemctl unmask tmp.mount\n# systemctl enable tmp.mount\n           [Mount]\nWhat=tmpfs\nWhere=/tmp\nType=tmpfs Options=mode=1777,strictatime,noexec,nodev,nosuid\n\nNotes:\nIf an entry for /tmp exists in /etc/fstab it will take precedence over entries in the tmp.mount file\nBUG 1667065* There is currently a bug in RHEL 8 when attempting to use systemd tmp.mount please reference link bellow https://bugzilla.redhat.com/show_bug.cgi?id=1667065\nCIS Controls:\nVersion 7\n9.1 Associate Active Ports, Services and Protocols to Asset Inventory\nAssociate active ports, services and protocols to the hardware assets in the asset inventory.\n\n"
    '
    @script_file = ''
    @commands = [{"local"=>"echo 'Automated remediation unavailable. Please remediate manually:\n\nConfigure /etc/fstab as appropriate.\nexample:\ntmpfs\t/tmp\ttmpfs     defaults,rw,nosuid,nodev,noexec,relatime  0 0\n\nOR\n\nRun the following commands to enable systemd /tmp mounting:\n# systemctl unmask tmp.mount\n# systemctl enable tmp.mount\n\nEdit /etc/systemd/system/local-fs.target.wants/tmp.mount to configure the /tmp mount:\n[Mount]\nWhat=tmpfs\nWhere=/tmp\nType=tmpfs\nOptions=mode=1777,strictatime,noexec,nodev,nosuid'\n"}]
  end
end
